#!/bin/bash

#/
#--------------------------------------------------------------------------
# Larasail Host
#--------------------------------------------------------------------------
#
# This command will create a new nginx host file for a specific domain
# pass the website domain and the folder location, here's an example:
#
# $ larasail host mywebsite.com /var/www/mywebsite
#
# The above command will create a new nginx host that will listen
# for a connection coming from mywebsite.com and map it to the
# /var/www/mywebsite/public folder
#
#/

. /etc/.larasail/includes/colors
. /etc/.larasail/includes/format

setsail

bar
cyan "| Adding New Nginx Host ";
bar

if [ "$(whoami)" != 'root' ]; then
	echo "You have no permission to run $0 as non-root user. Use sudo"
	exit 1;
fi

phpVersion="$(php -v | head -n 1 | cut -d " " -f 2 | cut -c 1,2,3)"
domain=$1
rootPath=$2
withWwwAlias=$3
sitesEnable='/etc/nginx/sites-enabled/'
sitesAvailable='/etc/nginx/sites-available/'
serverRoot='/var/www/'

while [ "$domain" = "" ]
do
	redbg "Please provide a domain:"
	read domain
done

if [ -e $sitesAvailable$domain ]; then
	redbg "This domain already exists.\nPlease Try Another one"
	exit;
fi


if [ "$rootPath" = "" ]; then
	rootPath=$serverRoot$domain
fi

if ! [ -d $rootPath ]; then
	mkdir $rootPath
	chmod 755 $rootPath
	mkdir "$rootPath/public"
	chmod 755 "$rootPath/public"
	if ! echo "Hello World!" > $rootPath/public/index.php
	then
		red "ERROR: Not able to write in file $rootPath/public/index.php. Please check permissions."
		exit;
	else
		echo "Added file to $rootPath/public/index.php"
	fi
fi

if [ -d ${rootPath}/storage ]; then
	echo "Updating the permissions of the storage folder"
	sudo chown -R larasail:www-data ${rootPath}/storage
	sudo chmod -R 775 ${rootPath}/storage
fi

if [ -d ${rootPath}/bootstrap/cache ]; then
	echo "Updating the permissions of the bootstrap/cache folder"
	sudo chown -R larasail:www-data ${rootPath}/bootstrap/cache
	sudo chmod -R 775 ${rootPath}/bootstrap/cache
fi

if ! [ -d $sitesEnable ]; then
	mkdir $sitesEnable
	chmod 755 $sitesEnable
fi

if ! [ -d $sitesAvailable ]; then
	mkdir $sitesAvailable
	chmod 755 $sitesAvailable
fi

configName=$domain
serverName=$domain
certbotDomains="-d ${domain}"

if [ "$withWwwAlias" = "--www-alias" ]; then
        serverName="$domain www.$domain"
	certbotDomains="-d ${domain} -d www.${domain}"
fi

if ! echo "server {

        root $rootPath/public;

        index index.php index.html index.htm;

        server_name $serverName;

        location / {
                try_files \$uri \$uri/ /index.php?\$query_string;
        }

        location ~*  \.(jpg|jpeg|png|gif)\$1 {
                expires 365d;
        }

        location ~*  \.(ico|css|js)\$ {
                expires 365d;
        }


        location ~ \.php\$ {
                include snippets/fastcgi-php.conf;
                fastcgi_pass unix:/run/php/php$phpVersion-fpm.sock;
        }

        location ~ /\.ht {
                deny all;
        }

}" > $sitesAvailable$configName
then
	echo "There is an ERROR create $configName file"
	exit;
else
	echo "New Virtual Host Created"
fi

if ! echo "127.0.0.1	$domain" >> /etc/hosts
then
	echo "ERROR: Not able write in /etc/hosts"
	exit;
else
	echo "Host added to /etc/hosts file"
fi

ln -s $sitesAvailable$configName $sitesEnable$configName

service nginx restart

cyan "Complete! \nYou now have a new Virtual Host \nYour new host is: http://$domain \nAnd its located at $rootPath"

echo "Would you like to install Let's Encrypt SSL for ${domain}?"
echo "[yes/no]"
read letsencrypt

if [ "$letsencrypt" = "yes" ]; then
	sudo certbot --nginx ${certbotDomains}
fi

exit;
